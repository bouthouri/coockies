name: React native pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build + Publish
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - uses: webfactory/ssh-agent@v0.2.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - run: git config --global --add url."git@github.com:".insteadOf "https://github.com/"

      - name: Set up Ruby 2.6
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            gems-
      - run: bundle install --deployment

      - name: Setup NodeJs
        uses: actions/setup-node@v1
        with:
          node-version: '10.20.1'
          
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-
      - run: yarn install --frozen-lockfile

      - name: Run fastlane ios platform
        run: bundle exec fastlane ios build
        env:
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_TYPE: ${{ secrets.MATCH_TYPE }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          KEY_CHAIN_NAME: ${{ secrets.KEY_CHAIN_NAME }}
          KEY_CHAIN_PASSWORD: ${{ secrets.KEY_CHAIN_PASSWORD }}
          GYM_EXPORT_METHOD: ${{ secrets.GYM_EXPORT_METHOD }}
          IOS_APP_ID: ${{ secrets.IOS_APP_ID }}
          IOS_TESTERS: ${{ secrets.IOS_TESTERS }}

      - name: Run fastlane android platform
        run: bundle exec fastlane android build
        env:
          GRADLE_BUILD_TYPE: ${{ secrets.GRADLE_BUILD_TYPE }}
          ANDROID_APP_ID: ${{ secrets.ANDROID_APP_ID }}
          ANDROID_TESTERS: ${{ secrets.ANDROID_TESTERS }}
