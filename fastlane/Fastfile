fastlane_version "2.28.3"

platform :ios do
    before_all do
        cocoapods(podfile: './ios/Podfile')
    end

    desc "Build a new ios version"
    lane :build do
        if ENV['CI']
            create_keychain(
                name: #{ENV["KEY_CHAIN_NAME"]},
                password: #{ENV["KEY_CHAIN_PASSWORD"]},
                default_keychain: true,
                unlock: true,
                timeout: 3600,
                lock_when_sleeps: false
            )
            match(
                git_url: #{ENV["MATCH_GIT_URL"]},
                type: #{ENV["MATCH_TYPE"]},
                keychain_name: #{ENV["KEY_CHAIN_NAME"]},
                keychain_password: #{ENV["KEY_CHAIN_PASSWORD"]},
                readonly: is_ci
            )
            gym(
                export_method: #{ENV["GYM_EXPORT_METHOD"]},
                scheme: 'coockies',
                workspace: './ios/coockies.xcworkspace'
            )
            firebase_app_distribution(
                app: #{ENV["IOS_APP_ID"]},
                testers: #{ENV["IOS_TESTERS"]}
            )
        else
            match(
                git_url: #{ENV["MATCH_GIT_URL"]},
                type: #{ENV["MATCH_TYPE"]},
            )
            gym(
                export_method: #{ENV["GYM_EXPORT_METHOD"]},
                scheme: 'coockies',
                workspace: './ios/coockies.xcworkspace'
            )
            firebase_app_distribution(
                app: #{ENV["IOS_APP_ID"]},
                testers: #{ENV["IOS_TESTERS"]}
            )
        end
    end

end

platform :android do

    desc "Build a new android version"
    lane :build do
        gradle(
            task: 'clean',
            project_dir: 'android/'
        )
        gradle(
            task: 'assemble',
            build_type:  #{ENV["GRADLE_BUILD_TYPE"]},
            project_dir: 'android/'
        )
        firebase_app_distribution(
            app: #{ENV["ANDROID_APP_ID"]},
            testers: #{ENV["ANDROID_TESTERS"]}
        )
    end

end